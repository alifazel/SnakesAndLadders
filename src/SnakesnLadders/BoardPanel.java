package SnakesnLadders;

import java.awt.*;
import java.io.IOException;
import java.net.UnknownHostException;
import javax.swing.*;

/**
 * The BoardPanel class implements the game board which is a JPanel running inside the main GUI JForm.
 * 
 * @author Animesh Mishra & Ali Fazel
 */
 
public class BoardPanel extends JPanel implements Runnable {

    private Image board=null;
    private int xs;
    private int ys;
    ImageIcon[] PlayerIcons = new ImageIcon[5];		//Creates an array for holding counters icons
    
    public BoardPanel() {
        initComponents();
        ImageIcon BackGroundImage=new ImageIcon("board.png");
        board=BackGroundImage.getImage();
        
        // Initialize the PlayerIcons[] array
        PlayerIcons[0]= new ImageIcon("Player1.gif");
        PlayerIcons[1]= new ImageIcon("Player2.gif");
        PlayerIcons[2]= new ImageIcon("Player3.gif");
        PlayerIcons[3]= new ImageIcon("Player4.gif");
        PlayerIcons[4]= new ImageIcon("Player5.gif");     
    }
    
   /**
    * Paints the BoardPanel components
    *
    *@param g The Graphics instance
    */ 
    public void paint(Graphics g){
        this.xs = (int)getWidth();
        this.ys = (int)getHeight();
        Graphics2D GameBoard = (Graphics2D)g.create();

        if(GameBoard.drawImage(board, 0, 0, xs, ys, this) == true);
        else { 
        	// Throw up a dialog box if board.png is not found in the local directory and quits
            JOptionPane.showMessageDialog(this,"Couldn't load the game board. Quitting now ...");
            System.exit(1) ;
        } 
        
        // Place player counters on the board
        place (GameBoard,Interface.thePlayers[0].getPosition(),PlayerIcons[0]) ;
        place (GameBoard,Interface.thePlayers[1].getPosition()+1,PlayerIcons[1]) ;
        place (GameBoard,Interface.thePlayers[2].getPosition()+2,PlayerIcons[2]) ;
        place (GameBoard,Interface.thePlayers[3].getPosition()+3,PlayerIcons[3]) ;
        place (GameBoard,Interface.thePlayers[4].getPosition()+4,PlayerIcons[4]) ;
    }
    
   /**
    * Places the player's counters onto the gameboard implemented by GameBoard
    *
    *@param g The Graphics 2D instance implementing the game board
    *@param squareCount The square on the board where the counter is to be put
    *@param counter The ImageIcon instance which to be used as the counter icon
    */
    public void place(Graphics2D g, int squareCount,ImageIcon counter) {
        int posX,posY,row,column ;
        
        row = squareCount/10 ;
        
        if(squareCount%10 == 0) {
            if(row%2 == 0) {
                posX = 10 ;
                posY = 600 - ((row-1)*64) - 2*row ;
            }
            else {
                posX = 600 ;
                posY = 600 - ((row-1)*64) - 2*row ;
            }
        }
        else {
            if(row%2 == 0) {
                column = squareCount%10 ;
                posX = 10 + ((column-1)*64) + 2*column;
                posY = 600 - (row*64) - 2*row;
            }
            else {
                column = 10 - (squareCount%10) ;
                posX = 10 + ((column)*64) + 2*column ;
                posY = 600 - (row*64) - 2*row ;
            }    
        }
    
        counter.paintIcon(this,g,posX,posY);
     }
 
    public void run() {
        throw new UnsupportedOperationException("Not supported yet.");
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
